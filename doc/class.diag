@startuml

database "DonneeConteneur" {
}

class Client {
+Client()
-id
-nom
-prenom
-adresse
}

class Commande {
+Commande()
-id
-date
-reduction
-fraixdeport
-prixtotal

}

class Boutique {
-LOYER
-SALAIRE
-CHARGE
-ca
-benefice

}

class Article {
+Article()
-prixPublique
-cout
}


class Main{
-coutFixe
-coutMobile
<<static>> -Application()
<<static>> +main(String[] args)
}

class Lot{
+Lot()
-type
-nbArticle
-reduction
-articles
}
interface Objet{
-nom
-reference
-marque
-prix
}

class LigneDeCommande{
-quantite
-prixLigne
}

class Stylo{
+Stylo()
-typeEncre
}

class Ramette{
-dimensionL
-dimensionH
}

class "<< singleton >>\nArticleFactory" as ArticleFactory{
+creerArticle(TypeArticle)
-ArticleFactory()
+getInstance()
}


class Stock{
-quantite
}

class "<< singleton >>\nModele" as Modele{
-Modele()
+getInstance()
-clients
-commandes
-stocks

+getCommandesBoutique()
+getCommandesClient()
+getClients()
+getStock()
+addClient()
+addCommande()
+modifierStock()
+getBoutiqueInfo()

}
class Controlleur{
+Controlleur(String s)
}

class ControlleurTerminal{
}
class ControlleurGraphique{
}

class VueTerminal{
+afficherClient()
+afficherCommande()
+afficherStock()
+afficherBoutique()
}


class DonneeManager{
-lire()
-ecrire()
}





Client "1" -- "1..*" Commande 
Article -up-|> Objet
Lot -up-|> Objet
Lot --* "2..*" Article
Stylo -up-|> Article
Ramette -up-|> Article
Objet "1..*" *-left- Commande
(Objet, Commande) .. LigneDeCommande

ArticleFactory ..> Article : "<< create >>"

Modele  --  Article
(Modele, Article) .. Stock
Modele ..> ArticleFactory : "<< use >>"
Modele ..> Boutique : "<< use >>"
Modele ..> Client : << use >>
Modele ..> Commande : << use >>
Modele ..> DonneeManager : << use >>

DonneeManager ..> DonneeConteneur : << read >>

ControlleurGraphique -up-|> Controlleur
ControlleurTerminal -up-|> Controlleur

Controlleur ..> Modele : << uses >>

ControlleurTerminal ..> VueTerminal : << use >>
ControlleurGraphique ..> VueGraphique : << use >>
VueGraphique -() javaFX


Main ..> Controlleur : << use >>
@enduml